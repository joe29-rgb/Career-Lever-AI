# Docker Compose for Development Environment
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
version: '3.8'

services:
  # Override app service for development
  app:
    build:
      target: builder  # Use builder stage for hot reload
    command: npm run dev
    volumes:
      # Mount source code for hot reloading
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      NODE_ENV: development
      LOG_LEVEL: DEBUG

  # MongoDB Express for database management (dev only)
  mongo-express:
    image: mongo-express:latest
    container_name: careerlever-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - careerlever-network

  # Redis Commander for Redis management (dev only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: careerlever-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redispassword}
    depends_on:
      - redis
    networks:
      - careerlever-network

